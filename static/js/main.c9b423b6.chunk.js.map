{"version":3,"sources":["contexts/ThemeContext.js","components/Intro.js","components/About.js","components/Portfolio.js","components/SkillItem.js","components/Skills.js","components/ThemeToggle.js","components/Navbar.js","components/Contact.js","App.js","serviceWorker.js","index.js","images/profile.jpg"],"names":["ThemeContext","createContext","ThemeContextProvider","state","isLightTheme","light","syntax","highlight","primary","secondary","tertiary","ui","bg","dark","toggleTheme","setState","Provider","value","this","props","children","Component","containerVariants","hidden","opacity","visible","transition","delay","duration","when","staggerChildren","exit","x","ease","headerVariants","Intro","useContext","theme","animation","useAnimation","useInView","threshold","ref","inView","useEffect","start","section","id","className","variants","initial","animate","h1","style","color","About","src","profile","border","borderColor","Portfolio","SkillItem","item","key","backgroundColor","Skills","map","uuidv1","ThemeToggle","type","onClick","class","Navbar","href","Contact","rel","target","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.c9b423b6.chunk.js","sourcesContent":["import React, { createContext, Component } from 'react';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nclass ThemeContextProvider extends Component {\r\n    state = {\r\n        isLightTheme: true,\r\n        light: { \r\n            syntax: '#333333', \r\n            highlight: {\r\n                primary: '#7A3E9D',\r\n                secondary: '#AA3731',\r\n                tertiary: '#4B69C6'\r\n            },\r\n            ui: '#f0c6ff66', \r\n            bg: '#f2f2f2' \r\n        },\r\n        dark: { \r\n            syntax: '#d4d4d4', \r\n            highlight: {\r\n                primary: '#569CD6',\r\n                secondary: '#CE9178',\r\n                tertiary: '#4EC9B0'\r\n            },\r\n            ui: '#cccccc33', \r\n            bg: '#1e1e1e' \r\n        }\r\n    }\r\n\r\n    toggleTheme = () => {\r\n        this.setState({ isLightTheme: !this.state.isLightTheme });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ThemeContext.Provider value={{...this.state, toggleTheme: this.toggleTheme}}>\r\n                {this.props.children}\r\n            </ThemeContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ThemeContextProvider;","import React, { useEffect, useContext } from 'react';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { motion, useAnimation } from 'framer-motion';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\n\r\nconst containerVariants = {\r\n    hidden: {\r\n        opacity: 0\r\n    },\r\n    visible: {\r\n        opacity: 1,\r\n        transition: {\r\n            delay: 0.5,\r\n            duration: 0.5,\r\n            when: \"beforeChildren\",\r\n            staggerChildren: 1.0\r\n        }\r\n    },\r\n    exit: {\r\n        x: '-100vw',\r\n        transition: {\r\n            ease: 'easeInOut'\r\n        }\r\n    }\r\n}\r\n\r\nconst headerVariants = {\r\n    hidden: {\r\n        opacity: 0\r\n    },\r\n    visible: {\r\n        opacity: 1,\r\n        transition: {\r\n            duration: 1.5\r\n        }\r\n    }\r\n}\r\n\r\nconst Intro = () => {\r\n    const { isLightTheme, light, dark } = useContext(ThemeContext);\r\n    const theme = isLightTheme ? light : dark;\r\n    const animation = useAnimation();\r\n    const [ref, inView, entry] = useInView({ threshold: 0.1 });\r\n\r\n    useEffect(() => {\r\n        if (inView) {\r\n            animation.start(\"visible\");\r\n        } else {\r\n            animation.start(\"hidden\");\r\n        }\r\n    }, [animation, inView]);\r\n\r\n    return (\r\n        <motion.section id=\"intro\" className=\"intro section-container\"\r\n            ref={ref}\r\n            variants={containerVariants}\r\n            initial=\"hidden\"\r\n            animate={animation}\r\n        >\r\n            <div className=\"into-inner\">\r\n                <motion.h1 className=\"intro-text col col-xs-12\" style={{ color: theme.syntax }}\r\n                    variants={headerVariants}\r\n                >\r\n                    Hello. I am <span style={{ color: theme.highlight.secondary }}>Jonathan Champion</span>\r\n                </motion.h1>\r\n                <motion.h1 className=\"intro-text col col-xs-12\" style={{ color: theme.syntax }}\r\n                    variants={headerVariants}\r\n                >\r\n                    Software Developer\r\n             </motion.h1>\r\n            </div>\r\n        </motion.section>\r\n    );\r\n}\r\n\r\nexport default Intro;","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\nimport profile from '../images/profile.jpg';\r\n\r\nconst About = () => {\r\n    const { isLightTheme, light, dark } = useContext(ThemeContext);\r\n    const theme = isLightTheme ? light : dark;\r\n\r\n    return (\r\n        <section id=\"about\" className=\"about section-container\">\r\n            <div className=\"section-inner\">\r\n            <h2 className=\"col col-xs-12\"><span style={{ color: theme.highlight.secondary }}>About</span> me</h2>\r\n            <div className=\"col col-xs-12 about-section\">\r\n                <div className=\"col col-xs-12 col-md-6 about-section-second-item\">\r\n                    <img src={profile} className=\"about-photo show-on-scroll\" \r\n                        style={{ border: 'solid 2px', borderColor: theme.syntax }} />\r\n                </div>\r\n                <div className=\"col col-xs-12 col-md-6 about-section-first-item\">\r\n                    <div className=\"about-text\">\r\n                        <h3>UK based software engineer with experience in full-stack development, front-end automation testing and performance testing</h3>\r\n                        <p>I enjoy and creating solutions to technical problems and designing responsive, elegant and intuitive web applications</p>\r\n                        <p>In my spare time I go climbing, watch artsy films and attend gigs in the fine city of Norwich</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\nfunction Portfolio() {\r\n    return (\r\n        <div className=\"portfolio\">\r\n            <h2>PORTFOLIO</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Portfolio;","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\n\r\nconst SkillItem = ({ id, item }) => {\r\n    const { isLightTheme, light, dark } = useContext(ThemeContext);\r\n    const theme = isLightTheme ? light : dark;\r\n\r\n    return (\r\n        <li key={id} style={{ backgroundColor: theme.highlight.primary, color: '#f2f2f2' }}>\r\n            {item}\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default SkillItem;","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\nimport SkillItem from './SkillItem';\r\nimport { v1 as uuidv1 } from 'uuid';\r\n\r\nconst Skills = () => {\r\n    const { isLightTheme, light, dark } = useContext(ThemeContext);\r\n    const theme = isLightTheme ? light : dark;\r\n\r\n    let items = ['Java (Spring)', 'RxJava', 'PostgreSQL', 'Docker', 'AWS', 'GIT', 'HTML', 'CSS', 'React', 'SASS (SCSS)', 'Selenium', 'JMeter'];\r\n\r\n    return (\r\n        <section id=\"skills\" className=\"skills section-container\">\r\n            <div className=\"section-inner\">\r\n                <h2 className=\"col col-xs-12\"><span style={{ color: theme.highlight.secondary }}>Skills</span> I know</h2>\r\n                <div className=\"col col-xs-12 skills-section\">\r\n                    <p>\r\n                        Here a few skills that I am competent in, and I'm constantly adding more to the list.</p>\r\n                    <ul className=\"col skills-list\">\r\n                        {items.map(item => <SkillItem id={uuidv1} item={item} />)}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Skills;","import React, { Component, useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\n\r\nconst ThemeToggle = () => {\r\n    const { isLightTheme, light, dark, toggleTheme } = useContext(ThemeContext);\r\n    const theme = isLightTheme ? light : dark;\r\n\r\n    return (\r\n        <label className=\"themeSwitch\">\r\n            <input type=\"checkbox\" onClick={toggleTheme} />\r\n                <span class=\"slider round\"></span>\r\n        </label>\r\n     );\r\n}\r\n \r\nexport default ThemeToggle;","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\nimport ThemeToggle from './ThemeToggle';\r\n\r\nconst Navbar = () => {\r\n    const { isLightTheme, light, dark } = useContext(ThemeContext);\r\n    const theme = isLightTheme ? light : dark;\r\n\r\n    return (\r\n        <header>\r\n            <div\r\n                className=\"header-inner\"\r\n                style={{ backgroundColor: theme.ui }}>\r\n                <nav className=\"navbar col-xs-12 col-sm-8 col-md-5 col-lg-4 col-xl-3 col-full-3\">\r\n                    <ul>\r\n                        <li>\r\n                            <a\r\n                                className='link-line'\r\n                                href=\"#about\"\r\n                                style={{ color: theme.highlight.primary }}>\r\n                                About\r\n                                </a>\r\n                        </li>\r\n                        <li>\r\n                            <a\r\n                                className='link-line'\r\n                                href=\"#skills\"\r\n                                style={{ color: theme.highlight.primary }}>\r\n                                Skills\r\n                                </a>\r\n                        </li>\r\n                        <li>\r\n                            <a\r\n                                className='link-line'\r\n                                href=\"#contact\"\r\n                                style={{ color: theme.highlight.primary }}>\r\n                                Contact\r\n                                </a>\r\n                        </li>\r\n                        <li>\r\n                            <ThemeToggle />\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\n\r\nconst Contact = () => {\r\n    const { isLightTheme, light, dark } = useContext(ThemeContext);\r\n    const theme = isLightTheme ? light : dark;\r\n\r\n    return (\r\n        <section id=\"contact\" className=\"section-container contact\">\r\n            <div className=\"section-inner\">\r\n                <h2 className=\"col-xs-12\">\r\n                    <span style={{ color: theme.highlight.secondary }}>Contact</span> me\r\n                </h2>\r\n                <div className='col-xs-8 col-sm-12 section-container contact-list-container'>\r\n                    <ul>\r\n                        <li\r\n                            className=\"col col-xs-6 col-sm-3\">\r\n                            <a\r\n                                className=\"link-line\"\r\n                                style={{ color: theme.highlight.primary }}\r\n                                href=\"mailto:jonathan.ag.champion@gmail.com\">\r\n                                Mail\r\n                            </a>\r\n                        </li>\r\n                        <li\r\n                            className=\"col col-xs-6 col-sm-3\">\r\n                            <a\r\n                                className=\"link-line\"\r\n                                style={{ color: theme.highlight.primary }}\r\n                                href=\"https://www.linkedin.com/in/jonathan-champion-39281993\"\r\n                                rel=\"noreferrer\"\r\n                                target=\"_blank\">\r\n                                LinkedIn\r\n                            </a>\r\n                        </li>\r\n                        <li\r\n                            className=\"col col-xs-6 col-sm-3\">\r\n                            <a\r\n                                className=\"link-line\"\r\n                                style={{ color: theme.highlight.primary }}\r\n                                href=\"https://twitter.com/JagChamps\"\r\n                                rel=\"noreferrer\"\r\n                                target=\"_blank\">\r\n                                Twitter\r\n                            </a>\r\n                        </li>\r\n                        <li\r\n                            className=\"col col-xs-6 col-sm-3\">\r\n                            <a\r\n                                className=\"link-line\"\r\n                                style={{ color: theme.highlight.primary }}\r\n                                href=\"https://github.com/Jagchamps\"\r\n                                rel=\"noreferrer\"\r\n                                target=\"_blank\">\r\n                                Github\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Contact;","import React, { useContext } from 'react';\nimport './styles/App.scss';\nimport Intro from './components/Intro.js';\nimport About from './components/About.js';\nimport Portfolio from './components/Portfolio.js';\nimport Skills from './components/Skills';\nimport Navbar from './components/Navbar';\nimport { ThemeContext } from './contexts/ThemeContext';\nimport Contact from './components/Contact';\n\nconst App = () => {\n  const { isLightTheme, light, dark } = useContext(ThemeContext);\n  const theme = isLightTheme ? light : dark;\n\n  return (\n    <div className=\"profile\" style={{ backgroundColor: theme.bg, color: theme.syntax }}>\n      <Navbar />\n      <Intro />\n      <About />\n      <Skills />\n      <Contact />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ThemeContextProvider from './contexts/ThemeContext';\r\n\r\nReactDOM.render(\r\n    <ThemeContextProvider>\r\n        <App />\r\n    </ThemeContextProvider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/profile.07a6cb67.jpg\";"],"sourceRoot":""}